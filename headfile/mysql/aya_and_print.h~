#include "mysql_aya.h"
//#include "../buffer/buffer.h"
NUMBER_AND_BYTES length_coded_analysis(u_char *);
u_char *com_query(u_char *,int);

void aya_and_print(buffer *buf, int dir, int db_type, int is_compress, u_char *payload, u_char *src_ip, u_char *src_port, 
		u_char *dst_ip, u_char *dst_port, long op_time, u_char *seq_number, u_char *ack_number )
{
	u_char *visitor_ip=NULL;
	u_char *visitor_port=NULL;
	u_char *db_ip=NULL;
	u_char *db_port=NULL;
	if(dir==1){
		visitor_ip=src_ip;
		visitor_port=src_port;
		db_ip=dst_ip;	
		db_port=dst_port;
	}else if(dir==2){
		visitor_ip=dst_ip;
		visitor_port=dst_port;
		db_ip=src_ip;	
		db_port=src_port;
	}
	
	u_char array[100];
	                 /*操作时间,访问者ip,       访问者端口，   数据库ip,     数据库端口,DB类型,方向,压缩*/
	int n=sprintf(array,"%ld|||%02x%02x%02x%02x|||%02x%02x|||%02x%02x%02x%02x|||%02x%02x|||%d|||%d|||%d|||",
			op_time,
			*visitor_ip,*(visitor_ip+1),*(visitor_ip+2),*(visitor_ip+3),
			*visitor_port,*(visitor_port+1),
			*db_ip,*(db_ip+1),*(db_ip+2),*(db_ip+3),
			*db_port,*(db_port+1),
			db_type,
			dir,
//			*seq_number,*(seq_number+1),*(seq_number+2),*(seq_number+3),
//			*ack_number,*(ack_number+1),*(ack_number+2),*(ack_number+3),
			is_compress);
	//将sprintf写入array数组的n个字符写入缓冲区
	print_buf(array,n,buf);
	/*输出用户名到缓冲区*/
	n=sprintf(array,"SAB|||");
	print_buf(array,n,buf);

	/*根据报文方向进行不同的输出*/
	if(dir==1){
		/*解析sql语句*/
		/*注意包长度不包含4字节包头，所以com_query的第二个参数是packet_length-1，而非减5*/
		int packet_length=(*(int *)payload)&0xffffff;
		u_char *text=com_query(payload+5,packet_length-1);//此函数执行后text指向的堆内存中存放的是已经规范化后的sql语句了
		/*数据库名,表名*/
		n=sprintf(array,"database_name|||");
		print_buf(array,n,buf);
		n=sprintf(array,"table_name|||");
		print_buf(array,n,buf);	
		/*操作类型（sql语句首单词）*/
		//将命令类型与所有合法命令类型比较，若没有匹配到，说明用户输入了非法命令
		//若匹配到了，则输出sql语句首单词
		int legal=is_legal(text,packet_length-1);	
		if(legal==0){
			u_char *p=text;
			n=0;
			while((*p)!=' '){
				p++;
				n++;
			}   
			print_buf(text,n,buf);//sql语句首单词写入缓冲区
		}else if(legal==1){
			n=sprintf(array,"illegal");
			print_buf(array,n,buf);	
		}
		/*响应*/
		n=sprintf(array,"|||OK|||");
		print_buf(array,n,buf);	
		/*风险*/
		n=sprintf(array,"1|||");
		print_buf(array,n,buf);	
		/*输出整个sql语句到缓冲区*/
		//fprintf(fp,"%s",text);
		print_buf(text,strlen(text),buf);
		//输出换行到缓冲区
		n=sprintf(array,"\n");
		print_buf(array,n,buf);	
		free(text);
	}else if(dir==2){
		/*数据库名,表名*/
		//调用field_analysis函数，输出数据库名和表名
		number_and_bytes=length_coded_analysis(payload+4);
		u_char *field_packet=payload+4+number_and_bytes.bytes;
		field_analysis(field_packet+4,buf);
		/*操作*/
		n=sprintf(array,"|||xxx|||");
		print_buf(array,n,buf);	
		/*响应*/
		n=sprintf(array,"OK|||");
		print_buf(array,n,buf);	
		/*风险*/
		n=sprintf(array,"1|||");
		print_buf(array,n,buf);	
		/*输出整个返回*/
		result_set(payload+4,buf);
		n=sprintf(array,"\n");
		print_buf(array,n,buf);	
	}
}
